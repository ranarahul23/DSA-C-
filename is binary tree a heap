class Solution {
  public:
    int countnodes(struct Node* root){
        if(root==NULL){
            return 0;
        }
        int ans=countnodes(root->left)+countnodes(root->right)+1;
        return ans;
        
    }
    
    bool iscbt(struct Node* root,int index,int cnt){
        if(root==NULL){
            return true;
        }
        if(index>=cnt){
            return false;
        }
        else{
            bool left=iscbt(root->left,index*2+1,cnt);
            bool right=iscbt(root->right,index*2+2,cnt);
            return (left&&right);
        }
    }
    bool ismaxorder(struct Node* root){
        if(root->left==NULL&&root->right==NULL){
            return true;
        }
        if(root->right==NULL){
            return (root->data>root->left->data);
        }
        else{
            bool left=ismaxorder(root->left);
            bool right=ismaxorder(root->right);
            return (left&&right && (root->data>root->left->data&&root->data>root->right->data));
        }
    }
    bool isHeap(struct Node* tree) {
        int index=0;
        int count=countnodes(tree);
        if(iscbt(tree,index,count)&&ismaxorder(tree)){
            return true;
        }
        else{
        return false;
    }
    
};
