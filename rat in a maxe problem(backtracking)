#include <bits/stdc++.h> 
bool issafe(int newx,int newy,vector < vector < int >> &arr,
int n,vector<vector<bool>> &vis){
    if((newx>=0 && newx<n)&&(newy>=0&&newy<n)&&
    vis[newx][newy]!=1&&arr[newx][newy]==1){
        return true;


    }
    else{
        return false;
    }

}
void solve(int x,int y,vector < vector < int >> &arr,int n,
vector<vector<bool>> &vis, vector<string> &ans,string path){

    if(x==n-1 && y==n-1){
        ans.push_back(path);
        return;
    }
    vis[x][y]=1;
    if(issafe(x+1,y,arr,n,vis)){
        solve(x+1,y,arr,n,vis,ans,path+'D');
    }

    if(issafe(x,y-1,arr,n,vis)){
        solve(x,y-1,arr,n,vis,ans,path+'L');
    }

    if(issafe(x,y+1,arr,n,vis)){
        solve(x,y+1,arr,n,vis,ans,path+'R');
    }


    if(issafe(x-1,y,arr,n,vis)){
        solve(x-1,y,arr,n,vis,ans,path+'U');
    }
    vis[x][y]=0;

}
vector < string > searchMaze(vector < vector < int >> & arr, int n) {
    vector<string> ans;
    vector<vector< bool > > visited(n,vector<bool>(n,0));
    string path="";
    if(arr[0][0]==0){
        return ans;
    }
    solve(0,0,arr,n,visited,ans,path);
    return ans;
}
